pacman -Syy reflector #Install reflector to rank mirrorlists.
reflector -c Hungary -a 6 --sort rate --save /etc/pacman.d/mirrorlist #Set top 6 Hungarian server to mirrorlist file.
pacman -Syy #Update database with the new mirrorlist.
passwd #Set root password.
systemctl enable --now sshd #Enable and start sshd
ip a #view ip address
lsblk #List all block devices.
mydev=sda #Select device for install target.
blkdiscard -f /dev/"$mydev" #Trim selected device, ALL IT'S DATA WILL GONE.
parted /dev/"$mydev" mklabel gpt #Create GPT partition table on selected device.
parted /dev/"$mydev" mkpart efi fat32 1MiB 261MiB #Create the first partition, it will be the EFI partition.
mkfs.fat -F32 /dev/"$mydev"1 #Create fat32 filesystem on the first partition.
parted /dev/"$mydev" set 1 esp on #Set ESP flag on the first partition. 
parted /dev/"$mydev" mkpart whitepart 261MiB 100% #Create secound partition on device use all the rest space.
mkfs.btrfs -m single -d single /dev/"$mydev"2 #Create btrfs filesystem on secound partition.
fdisk -l #List all partitions.
mount /dev/"$mydev"2 /mnt #Mount btrfs partition for create subvolumes.
btrfs subvolume create /mnt/@ #Create the root subvolume.
btrfs subvolume create /mnt/@home #Create the home subvolume.
btrfs subvolume create /mnt/@var_log #Create the log subvolume.
btrfs subvolume create /mnt/@tmp #Create the tmp subvolume.
btrfs subvolume create /mnt/@swap #Create the swap subvolume.
btrfs subvolume create /mnt/@snapshots #Create the snapshots subvolume.
umount /mnt #Unmount btrfs partition to mount subvolumes instead.
mount -o noatime,space_cache=v2,ssd,subvol=@ /dev/"$mydev"2 /mnt #First mount root subvolume.
mkdir -p /mnt/{boot,home,var/log,tmp,swap,.snapshots} #Create the folders for the other subvolumes.
mount -o noatime,space_cache=v2,ssd,subvol=@home /dev/"$mydev"2 /mnt/home #Mount home subvolume.
mount -o noatime,space_cache=v2,ssd,subvol=@snapshots /dev/"$mydev"2 /mnt/.snapshots #Mount snapshots subvolume.
mount -o noatime,space_cache=v2,ssd,nodatacow,subvol=@swap /dev/"$mydev"2 /mnt/swap #Mount log subvolume.
mount -o noatime,space_cache=v2,ssd,nodatacow,subvol=@var_log /dev/"$mydev"2 /mnt/var/log #Mount log subvolume.
mount -o noatime,space_cache=v2,ssd,nodatacow,subvol=@tmp /dev/"$mydev"2 /mnt/tmp #Mount tmp subvolume.
mount /dev/"$mydev"1 /mnt/boot #Mount boot partition.
pacstrap /mnt base linux linux-firmware neovim btrfs-progs #Install essential packages to selected new root directory. 
genfstab -U /mnt >> /mnt/etc/fstab #Generate fstab file.
arch-chroot /mnt #Change root to the installation.
timedatectl list-timezones | grep Budapest #Query timezone for Budapest.
ln -sf /usr/share/zoneinfo/Europe/Budapest /etc/localtime #Link Budapest timezone file to localtime.
hwclock --systohc #Syncronize clock to hardware clock.
myloc="en_US.UTF-8 UTF-8" #Select locale.
sed -i "s/#$myloc/$myloc/" /etc/locale.gen #Uncomment selected in locale.gen
myloc="hu_HU.UTF-8 UTF-8" #Select another locale.
sed -i "s/#$myloc/$myloc/" /etc/locale.gen #Uncomment selected in locale.gen
locale-gen #Generate locale.
echo LANG=en_US.UTF-8 >> /etc/locale.conf #Set system locale.
myhostn=BlackI #Select a hostname.
echo "$myhostn" > /etc/hostname #Set hostname.
printf "127.0.0.1\tlocalhost\n::1\t\tlocalhost\n127.0.1.1\t$myhostn.localdomain\t$myhostn" >> /etc/hosts #Write defaults to hosts file.
sed -i "s/#Color/Color/" /etc/pacman.conf #Enable pacman color.
grep -q "ILoveCandy" /etc/pacman.conf || sed -i "/#VerbosePkgLists/a ILoveCandy" /etc/pacman.conf
sed -i "s/-j2/-j8/;s/^#MAKEFLAGS/MAKEFLAGS/" /etc/makepkg.conf #Enable multi thread for package compile
pacman -S grub grub-btrfs efibootmgr efivar os-prober mtools dosfstools intel-ucode networkmanager base-devel linux-headers pkgstats #Install secondary essential packages.
pacman -S zsh grml-zsh-config git reflector xdg-utils xdg-user-dirs zsh-completions #User tools
pacman -S snapper #Snapper BTRFS 
pacman -S easyeffects gst-plugin-pipewire libpipewire02 pipewire pipewire-alsa pipewire-docs pipewire-jack pipewire-media-session pipewire-pulse #Pipewire
pacman -S libva-intel-driver vulkan-intel xf86-video-intel  intel-media-driver intel-gpu-tools #Intel iGPU 
pacman -S nvidia libvdpau cuda cudnn nvidia-utils #Nvidia GPU
pacman -S gnome 
systemctl enable gdm
sed -i "s/MODULES=()/MODULES=(btrfs)/" /etc/mkinitcpio.conf #Add btrfs hook to mkinitcpio.
mkinitcpio -p linux #Create an initial ramdisk environment.
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB #Install grub.
grub-mkconfig -o /boot/grub/grub.cfg #Generate grub config.
systemctl enable NetworkManager #Enable network service.
myuser=aaron #Select new user name.
useradd -m -G wheel -s /bin/zsh "$myuser" #Create new user.
passwd "$myuser" #Set password for new user.
echo "%wheel ALL=(ALL) ALL" | EDITOR="tee -a" visudo #grant sudo to wheel group
exit #Exit from chroot back to installer.
umount -a #Unmount all devices.
